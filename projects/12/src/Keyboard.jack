// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/Keyboard.jack

/**
 * A library for handling user input from the keyboard.
 */
class Keyboard {
    /** Initializes the keyboard. */
    function void init() {
      return;
    } 

    /**
     * Returns the character of the currently pressed key on the keyboard;
     * if no key is currently pressed, returns 0.
     *
     * Recognizes all ASCII characters, as well as the following keys:
     * new line = 128 = String.newline()
     * backspace = 129 = String.backspace()
     * left arrow = 130
     * up arrow = 131
     * right arrow = 132
     * down arrow = 133
     * home = 134
     * End = 135
     * page up = 136
     * page down = 137
     * insert = 138
     * delete = 139
     * ESC = 140
     * F1 - F12 = 141 - 152
     */
    function char keyPressed() {
      return Memory.peek(24576);
    }

    /**								
     * Waits until a key is pressed on the keyboard and released,
     * then echoes the key to the screen, and returns the character 
     * of the pressed key.
     */
    function char readChar() {
      var char c ;
      // display the cursor
      do Output.printCursor(true);
      let c = Keyboard.keyPressed();
      // waits until a key is pressed
      while(c = 0){
        let c = Keyboard.keyPressed();
      }

      while(~(Keyboard.keyPressed()=0) ){} // waits until the key is released
      
      if( (c>31) & (c<127) ){
        do Output.printCursor(false);
        do Output.printChar(c);
        do Output.printCursor(true);
        return c;
      } 

      return c;
    }

    

    /**								
     * Displays the message on the screen, reads from the keyboard the entered
     * text until a newline character is detected, echoes the text to the screen,
     * and returns its value. Also handles user backspaces.
     */
    function String readLine(String message) {
      var String str;
      var char c;
      let str = String.new(Output.cols());
      do Output.printString(message);
      
      let c = Keyboard.readChar();
      while ( ~(c = String.newLine()) ){
        if( c=String.backSpace() ){
          if(str.length() > 0){
            do str.eraseLastChar();
            do Output.backSpace();
            // do Output.printCursor(true);
          }
        } else{
          do str.appendChar(c);
        }
        let c = Keyboard.readChar();
      }
      do Output.println();
      // do Output.printCursor(true);
      return str;
    }   

    /**								
     * Displays the message on the screen, reads from the keyboard the entered
     * text until a newline character is detected, echoes the text to the screen,
     * and returns its integer value (until the first non-digit character in the
     * entered text is detected). Also handles user backspaces. 
     */
    function int readInt(String message) {
      var int val;
      var String str ;
      let str = Keyboard.readLine(message);
      let val = str.intValue();
      do str.dispose();
      return val;
    }

     
}
